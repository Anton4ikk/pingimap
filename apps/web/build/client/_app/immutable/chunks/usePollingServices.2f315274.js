import{o as f,i as g}from"./scheduler.b5ecf4e6.js";import{w as d}from"./index.f4f048e8.js";function w(){const t=d({services:[],loading:!0,error:"",isPolling:!1});let o=null,e=null;const n=async(s=!1)=>{e&&e.abort(),e=new AbortController,s||t.update(r=>({...r,loading:!0,error:""}));try{const r=await fetch("/api/services",{signal:e.signal});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);const a=await r.json();t.update(l=>({...l,services:a,loading:!1,error:""}))}catch(r){if(r instanceof Error&&r.name==="AbortError")return;const a=r instanceof Error?r.message:"Failed to fetch services";t.update(l=>({...l,loading:!1,error:a}))}},i=()=>{o||(t.update(s=>({...s,isPolling:!0})),o=setInterval(()=>{n(!0)},5e3))},c=()=>{o&&(clearInterval(o),o=null),e&&(e.abort(),e=null),t.update(s=>({...s,isPolling:!1}))},u=()=>{n(!1)};return f(()=>{n(),i()}),g(()=>{c()}),{state:t,refresh:u,startPolling:i,stopPolling:c}}export{w as u};
